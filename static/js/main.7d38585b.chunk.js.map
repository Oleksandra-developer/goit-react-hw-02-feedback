{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js","components/FeedbackOptions/Feedback.module.css"],"names":["Statistics","good","neutral","bad","total","positivePersentage","className","defaultProps","PropTypes","number","FeedbackOptions","options","onLeaveFeedback","styles","Feedback__controls","map","option","type","onClick","name","Feedback__option","Section","title","children","Notification","message","App","state","handleClick","e","currentTarget","setState","prevState","this","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","floor","feedback_container","keys","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gRAGMA,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,+BACE,qBAAIC,UAAU,iBAAd,mBAAsCL,EAAtC,OACA,qBAAIK,UAAU,iBAAd,sBAAyCJ,EAAzC,OACA,qBAAII,UAAU,iBAAd,kBAAqCH,EAArC,OAECC,EAAQ,qBAAIE,UAAU,iBAAd,oBAAuCF,EAAvC,OAAsD,KAC9DA,EACC,qBAAIE,UAAU,iBAAd,gCACsBD,EADtB,QAGE,SAGRL,EAAWO,aAAe,CACxBN,KAAMO,IAAUC,OAChBP,QAASM,IAAUC,OACnBN,IAAKK,IAAUC,QAEFT,Q,gBCEAU,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oBAAIN,UAAWO,IAAOC,mBAAtB,SACGH,EAAQI,KAAI,SAACC,GAAD,OACX,6BACE,wBACEC,KAAK,SACLC,QAASN,EACTO,KAAMH,EACNV,UAAWO,IAAOO,iBAJpB,SAMGJ,KAPIA,SCQAK,EAbC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,qCACG,IACD,6BAAKD,IACJC,MCGUC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCiD3BC,E,4MA5CbC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPyB,YAAc,SAACC,GACb,IAAQV,EAASU,EAAEC,cAAXX,KACR,EAAKY,UAAS,SAACC,GAAD,sBAAmBb,EAAOa,EAAUb,GAAQ,O,4CAE5D,WACE,MAA+Bc,KAAKN,MAA5B1B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB+B,EAAqBC,OAAOC,OAAOH,KAAKN,OAAOU,QACnD,SAACV,EAAOW,GAAR,OAAiBA,EAAOX,IACxB,GAEIY,EAAkCC,KAAKC,MAC1CxC,EAAOiC,EAAsB,KAEhC,OACE,sBAAK5B,UAAWO,IAAO6B,mBAAvB,UACE,cAAC,EAAD,CAASpB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAASwB,OAAOQ,KAAKV,KAAKN,OAC1Bf,gBAAiBqB,KAAKL,gBAG1B,cAAC,EAAD,CAASN,MAAM,aAAf,SAC0B,IAAvBY,EACC,cAAC,EAAD,CACEjC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO8B,EACP7B,mBAAoBkC,IAGtB,cAAC,EAAD,CAAcd,QAAQ,+B,GAtChBmB,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,mBAAqB,qCAAqC,mBAAqB,qCAAqC,iBAAmB,sC","file":"static/js/main.7d38585b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePersentage }) => (\r\n  <ul>\r\n    <li className=\"feedback_value\">Good: {good};</li>\r\n    <li className=\"feedback_value\">Neutral: {neutral};</li>\r\n    <li className=\"feedback_value\">Bad: {bad};</li>\r\n\r\n    {total ? <li className=\"feedback_value\">Total: {total};</li> : null}\r\n    {total ? (\r\n      <li className=\"feedback_value\">\r\n        Positive feedback: {positivePersentage}%;\r\n      </li>\r\n    ) : null}\r\n  </ul>\r\n);\r\nStatistics.defaultProps = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n};\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Feedback.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <ul className={styles.Feedback__controls}>\r\n    {options.map((option) => (\r\n      <li key={option}>\r\n        <button\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}\r\n          name={option}\r\n          className={styles.Feedback__option}\r\n        >\r\n          {option}\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    {\" \"}\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\n// eslint-disable-next-line react/no-typos\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\nimport styles from \"./components/FeedbackOptions/Feedback.module.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = (e) => {\n    const { name } = e.currentTarget;\n    this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const countTotalFeedback = Object.values(this.state).reduce(\n      (state, acc) => (acc += state),\n      0\n    );\n    const countPositiveFeedbackPercentage = Math.floor(\n      (good / countTotalFeedback) * 100\n    );\n    return (\n      <div className={styles.feedback_container}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {countTotalFeedback !== 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback}\n              positivePersentage={countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Feedback__controls\":\"Feedback_Feedback__controls__1KpWV\",\"feedback_container\":\"Feedback_feedback_container__1p14L\",\"Feedback__option\":\"Feedback_Feedback__option__2k8gm\"};"],"sourceRoot":""}